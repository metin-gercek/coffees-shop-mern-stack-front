{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  paymentMethod: localStorage.getItem(\"paymentMethod\") ? localStorage.getItem(\"paymentMethod\") : {\n    paymentMethodName: \"\",\n    creditCard: {}\n  },\n  shippingAddress: localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {}\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].quantity += 1;\n      } else {\n        const tempProduct = { ...action.payload,\n          quantity: 1\n        };\n        state.cartItems.push(tempProduct);\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    increaseCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n\n      if (state.cartItems[itemIndex].quantity >= 1) {\n        state.cartItems[itemIndex].quantity += 1;\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n\n      if (state.cartItems[itemIndex].quantity > 1) {\n        state.cartItems[itemIndex].quantity -= 1;\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    removeFromCart(state, action) {\n      const newCartItems = state.cartItems.filter(cartItem => cartItem._id !== action.payload._id);\n      state.cartItems = newCartItems;\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    clearAllCart(state, action) {\n      state.cartItems = [];\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    saveShippingAddress(state, action) {\n      state.shippingAddress = action.payload;\n      localStorage.setItem(\"shippingAddress\", JSON.stringify(state.shippingAddress));\n    },\n\n    deleteShippingAddress(state, action) {\n      state.shippingAddress = {};\n      localStorage.setItem(\"shippingAddress\", JSON.stringify(state.shippingAddress));\n    },\n\n    savePaymentMethod(state, action) {\n      state.paymentMethod = action.payload;\n      localStorage.setItem(\"paymentMethod\", JSON.stringify(state.paymentMethod));\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  increaseCart,\n  removeFromCart,\n  clearAllCart,\n  saveShippingAddress,\n  deleteShippingAddress,\n  savePaymentMethod\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","localStorage","getItem","JSON","parse","paymentMethod","paymentMethodName","creditCard","shippingAddress","cartSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","item","_id","payload","quantity","tempProduct","push","setItem","stringify","increaseCart","decreaseCart","removeFromCart","newCartItems","filter","cartItem","clearAllCart","saveShippingAddress","deleteShippingAddress","savePaymentMethod","actions","reducer"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/features/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: localStorage.getItem(\"cartItems\")\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [],\r\n\r\n  paymentMethod: localStorage.getItem(\"paymentMethod\")\r\n    ? localStorage.getItem(\"paymentMethod\")\r\n    : {\r\n        paymentMethodName: \"\",\r\n        creditCard: {},\r\n      },\r\n\r\n  shippingAddress: localStorage.getItem(\"shippingAddress\")\r\n    ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n    : {},\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n\r\n      if (itemIndex >= 0) {\r\n        state.cartItems[itemIndex].quantity += 1;\r\n      } else {\r\n        const tempProduct = { ...action.payload, quantity: 1 };\r\n        state.cartItems.push(tempProduct);\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n\r\n    increaseCart(state, action) {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n      if (state.cartItems[itemIndex].quantity >= 1) {\r\n        state.cartItems[itemIndex].quantity += 1;\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n    decreaseCart(state, action) {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n      if (state.cartItems[itemIndex].quantity > 1) {\r\n        state.cartItems[itemIndex].quantity -= 1;\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n    removeFromCart(state, action) {\r\n      const newCartItems = state.cartItems.filter(\r\n        (cartItem) => cartItem._id !== action.payload._id\r\n      );\r\n      state.cartItems = newCartItems;\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n    clearAllCart(state, action) {\r\n      state.cartItems = [];\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n    saveShippingAddress(state, action) {\r\n      state.shippingAddress = action.payload;\r\n      localStorage.setItem(\r\n        \"shippingAddress\",\r\n        JSON.stringify(state.shippingAddress)\r\n      );\r\n    },\r\n    deleteShippingAddress(state, action) {\r\n      state.shippingAddress = {};\r\n      localStorage.setItem(\r\n        \"shippingAddress\",\r\n        JSON.stringify(state.shippingAddress)\r\n      );\r\n    },\r\n    savePaymentMethod(state, action) {\r\n      state.paymentMethod = action.payload;\r\n      localStorage.setItem(\r\n        \"paymentMethod\",\r\n        JSON.stringify(state.paymentMethod)\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addToCart,\r\n  decreaseCart,\r\n  increaseCart,\r\n  removeFromCart,\r\n  clearAllCart,\r\n  saveShippingAddress,\r\n  deleteShippingAddress,\r\n  savePaymentMethod,\r\n} = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}