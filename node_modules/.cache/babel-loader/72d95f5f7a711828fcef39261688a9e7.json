{"ast":null,"code":"var _jsxFileName = \"C:\\\\tiedostot\\\\integrify\\\\fs12-fullstack\\\\client\\\\src\\\\pages\\\\OrderPageUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet-async\";\nimport Loading from \"components/Loading\";\nimport ErrorMessageBox from \"components/ErrorMessageBox\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOrderById } from \"features/cartSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderPageUser = () => {\n  _s();\n\n  const {\n    orderSummary,\n    error\n  } = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      dispatch(getOrderById(id));\n    }\n  }, [id, dispatch]);\n  console.log(orderSummary);\n  return (\n    /*#__PURE__*/\n    //<div>\n    //  {\" \"}\n    //  {orderSummary.status === \"pending\" ? (\n    //    <Loading></Loading>\n    //  ) : error ? (\n    //    <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\n    //  ) : (\n    //    <div>\n    //      <Helmet>\n    //        {/*<title>Order {orderId}</title>*/}\n    //      </Helmet>\n    //      {/*<h1 className=\"my-3\">Order {orderId}</h1>*/}\n    //      <Row>\n    //        <Col md={8}>\n    //          <Card className=\"mb-3\">\n    //            <Card.Body>\n    //              <Card.Title>Shipping</Card.Title>\n    //              <Card.Text>\n    //                {/*<strong>Name:</strong> {order.shippingAddress.fullName}{\" \"}\n    //                <br />\n    //                <strong>Address: </strong> {order.shippingAddress.address},\n    //                {order.shippingAddress.city},{\" \"}\n    //                {order.shippingAddress.postalCode},\n    //                {order.shippingAddress.country}*/}\n    //              </Card.Text>\n    //              {order.isDelivered ? (\n    //                <ErrorMessageBox variant=\"success\">\n    //                  Delivered at {order.deliveredAt}\n    //                </ErrorMessageBox>\n    //              ) : (\n    //                <ErrorMessageBox variant=\"danger\">\n    //                  Not Delivered\n    //                </ErrorMessageBox>\n    //              )}\n    //            </Card.Body>\n    //          </Card>\n    //          <Card className=\"mb-3\">\n    //            <Card.Body>\n    //              <Card.Title>Payment</Card.Title>\n    //              <Card.Text>\n    //                <strong>Method:</strong> {order.paymentMethod}\n    //              </Card.Text>\n    //              {order.isPaid ? (\n    //                <ErrorMessageBox variant=\"success\">\n    //                  Paid at {order.paidAt}\n    //                </ErrorMessageBox>\n    //              ) : (\n    //                <ErrorMessageBox variant=\"danger\">Not Paid</ErrorMessageBox>\n    //              )}\n    //            </Card.Body>\n    //          </Card>\n    //          <Card className=\"mb-3\">\n    //            <Card.Body>\n    //              <Card.Title>Items</Card.Title>\n    //              <ListGroup variant=\"flush\">\n    //                {order.orderItems.map((item) => (\n    //                  <ListGroup.Item key={item._id}>\n    //                    <Row className=\"align-items-center\">\n    //                      <Col md={6}>\n    //                        <img\n    //                          src={item.image}\n    //                          alt={item.name}\n    //                          className=\"img-fluid rounded img-thumbnail\"\n    //                        ></img>{\" \"}\n    //                        <Link to={`/product/${item.slug}`}>\n    //                          {item.name}\n    //                        </Link>\n    //                      </Col>\n    //                      <Col md={3}>\n    //                        <span>{item.quantity}</span>\n    //                      </Col>\n    //                      <Col md={3}>${item.price}</Col>\n    //                    </Row>\n    //                  </ListGroup.Item>\n    //                ))}\n    //              </ListGroup>\n    //            </Card.Body>\n    //          </Card>\n    //        </Col>\n    //        <Col md={4}>\n    //          <Card className=\"mb-3\">\n    //            <Card.Body>\n    //              <Card.Title>Order Summary</Card.Title>\n    //              <ListGroup variant=\"flush\">\n    //                <ListGroup.Item>\n    //                  <Row>\n    //                    <Col>Items</Col>\n    //                    <Col>${order.itemsPrice.toFixed(2)}</Col>\n    //                  </Row>\n    //                </ListGroup.Item>\n    //                <ListGroup.Item>\n    //                  <Row>\n    //                    <Col>Shipping</Col>\n    //                    <Col>${order.shippingPrice.toFixed(2)}</Col>\n    //                  </Row>\n    //                </ListGroup.Item>\n    //                <ListGroup.Item>\n    //                  <Row>\n    //                    <Col>Tax</Col>\n    //                    <Col>${order.taxPrice.toFixed(2)}</Col>\n    //                  </Row>\n    //                </ListGroup.Item>\n    //                <ListGroup.Item>\n    //                  <Row>\n    //                    <Col>\n    //                      <strong> Order Total</strong>\n    //                    </Col>\n    //                    <Col>\n    //                      <strong>${order.totalPrice.toFixed(2)}</strong>\n    //                    </Col>\n    //                  </Row>\n    //                </ListGroup.Item>\n    //              </ListGroup>\n    //            </Card.Body>\n    //          </Card>\n    //        </Col>\n    //      </Row>\n    //    </div>\n    //  )}\n    //</div>\n    _jsxDEV(\"div\", {\n      children: \"dad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 2\n    }, this)\n  );\n};\n\n_s(OrderPageUser, \"2r09ZdIcIqd2Paaf63DphYcjQDA=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n\n_c = OrderPageUser;\nexport default OrderPageUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderPageUser\");","map":{"version":3,"names":["React","useEffect","Row","Col","Card","ListGroup","Helmet","Loading","ErrorMessageBox","Link","useSelector","useDispatch","getOrderById","useParams","OrderPageUser","orderSummary","error","state","cart","dispatch","id","console","log"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/pages/OrderPageUser.js"],"sourcesContent":["import React, {useEffect }from \"react\";\r\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Loading from \"components/Loading\";\r\nimport ErrorMessageBox from \"components/ErrorMessageBox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { getOrderById } from \"features/cartSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst OrderPageUser = () => {\r\n  const { orderSummary, error } = useSelector((state) => state.cart);\r\n  \r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getOrderById(id));\r\n    }\r\n  }, [id, dispatch]);\r\n  console.log(orderSummary);\r\n  return (\r\n    //<div>\r\n    //  {\" \"}\r\n    //  {orderSummary.status === \"pending\" ? (\r\n    //    <Loading></Loading>\r\n    //  ) : error ? (\r\n    //    <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n    //  ) : (\r\n    //    <div>\r\n    //      <Helmet>\r\n    //        {/*<title>Order {orderId}</title>*/}\r\n    //      </Helmet>\r\n    //      {/*<h1 className=\"my-3\">Order {orderId}</h1>*/}\r\n    //      <Row>\r\n    //        <Col md={8}>\r\n    //          <Card className=\"mb-3\">\r\n    //            <Card.Body>\r\n    //              <Card.Title>Shipping</Card.Title>\r\n    //              <Card.Text>\r\n    //                {/*<strong>Name:</strong> {order.shippingAddress.fullName}{\" \"}\r\n    //                <br />\r\n    //                <strong>Address: </strong> {order.shippingAddress.address},\r\n    //                {order.shippingAddress.city},{\" \"}\r\n    //                {order.shippingAddress.postalCode},\r\n    //                {order.shippingAddress.country}*/}\r\n    //              </Card.Text>\r\n    //              {order.isDelivered ? (\r\n    //                <ErrorMessageBox variant=\"success\">\r\n    //                  Delivered at {order.deliveredAt}\r\n    //                </ErrorMessageBox>\r\n    //              ) : (\r\n    //                <ErrorMessageBox variant=\"danger\">\r\n    //                  Not Delivered\r\n    //                </ErrorMessageBox>\r\n    //              )}\r\n    //            </Card.Body>\r\n    //          </Card>\r\n    //          <Card className=\"mb-3\">\r\n    //            <Card.Body>\r\n    //              <Card.Title>Payment</Card.Title>\r\n    //              <Card.Text>\r\n    //                <strong>Method:</strong> {order.paymentMethod}\r\n    //              </Card.Text>\r\n    //              {order.isPaid ? (\r\n    //                <ErrorMessageBox variant=\"success\">\r\n    //                  Paid at {order.paidAt}\r\n    //                </ErrorMessageBox>\r\n    //              ) : (\r\n    //                <ErrorMessageBox variant=\"danger\">Not Paid</ErrorMessageBox>\r\n    //              )}\r\n    //            </Card.Body>\r\n    //          </Card>\r\n\r\n    //          <Card className=\"mb-3\">\r\n    //            <Card.Body>\r\n    //              <Card.Title>Items</Card.Title>\r\n    //              <ListGroup variant=\"flush\">\r\n    //                {order.orderItems.map((item) => (\r\n    //                  <ListGroup.Item key={item._id}>\r\n    //                    <Row className=\"align-items-center\">\r\n    //                      <Col md={6}>\r\n    //                        <img\r\n    //                          src={item.image}\r\n    //                          alt={item.name}\r\n    //                          className=\"img-fluid rounded img-thumbnail\"\r\n    //                        ></img>{\" \"}\r\n    //                        <Link to={`/product/${item.slug}`}>\r\n    //                          {item.name}\r\n    //                        </Link>\r\n    //                      </Col>\r\n    //                      <Col md={3}>\r\n    //                        <span>{item.quantity}</span>\r\n    //                      </Col>\r\n    //                      <Col md={3}>${item.price}</Col>\r\n    //                    </Row>\r\n    //                  </ListGroup.Item>\r\n    //                ))}\r\n    //              </ListGroup>\r\n    //            </Card.Body>\r\n    //          </Card>\r\n    //        </Col>\r\n    //        <Col md={4}>\r\n    //          <Card className=\"mb-3\">\r\n    //            <Card.Body>\r\n    //              <Card.Title>Order Summary</Card.Title>\r\n    //              <ListGroup variant=\"flush\">\r\n    //                <ListGroup.Item>\r\n    //                  <Row>\r\n    //                    <Col>Items</Col>\r\n    //                    <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n    //                  </Row>\r\n    //                </ListGroup.Item>\r\n    //                <ListGroup.Item>\r\n    //                  <Row>\r\n    //                    <Col>Shipping</Col>\r\n    //                    <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n    //                  </Row>\r\n    //                </ListGroup.Item>\r\n    //                <ListGroup.Item>\r\n    //                  <Row>\r\n    //                    <Col>Tax</Col>\r\n    //                    <Col>${order.taxPrice.toFixed(2)}</Col>\r\n    //                  </Row>\r\n    //                </ListGroup.Item>\r\n    //                <ListGroup.Item>\r\n    //                  <Row>\r\n    //                    <Col>\r\n    //                      <strong> Order Total</strong>\r\n    //                    </Col>\r\n    //                    <Col>\r\n    //                      <strong>${order.totalPrice.toFixed(2)}</strong>\r\n    //                    </Col>\r\n    //                  </Row>\r\n    //                </ListGroup.Item>\r\n    //              </ListGroup>\r\n    //            </Card.Body>\r\n    //          </Card>\r\n    //        </Col>\r\n    //      </Row>\r\n    //    </div>\r\n    //  )}\r\n    //</div>\r\n\t<div>dad</div>\r\n  );\r\n};\r\n\r\nexport default OrderPageUser;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,iBAA1C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAA0BN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA3C;EAEA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM;IAAES;EAAF,IAASP,SAAS,EAAxB;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAImB,EAAJ,EAAQ;MACND,QAAQ,CAACP,YAAY,CAACQ,EAAD,CAAb,CAAR;IACD;EACF,CAJQ,EAIN,CAACA,EAAD,EAAKD,QAAL,CAJM,CAAT;EAKAE,OAAO,CAACC,GAAR,CAAYP,YAAZ;EACA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EA1HC;AA4HD,CAxID;;GAAMD,a;UAC4BJ,W,EAEfC,W,EACFE,S;;;KAJXC,a;AA0IN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}