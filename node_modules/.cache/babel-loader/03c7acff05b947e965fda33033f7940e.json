{"ast":null,"code":"var _jsxFileName = \"C:\\\\tiedostot\\\\integrify\\\\fs12-fullstack\\\\client\\\\src\\\\pages\\\\AdminProductEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport Loading from '../components/Loading';\nimport ErrorMessageBox from '../components/ErrorMessageBox';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProductEditScreen() {\n  _s();\n\n  const params = useParams(); // /product/:id\n\n  const {\n    id: productId\n  } = params;\n  const [{\n    loading,\n    error\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const [name, setName] = useState('');\n  const [slug, setSlug] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/products/${productId}`);\n        setName(data.name);\n        setSlug(data.slug);\n        setPrice(data.price);\n        setImage(data.image);\n        setCategory(data.category);\n        setCountInStock(data.countInStock);\n        setBrand(data.brand);\n        setDescription(data.description);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [productId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit Product $\", productId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit Product \", productId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"slug\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Slug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: slug,\n          onChange: e => setSlug(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: image,\n          onChange: e => setImage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: brand,\n          onChange: e => setBrand(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"countInStock\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Count In Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: countInStock,\n          onChange: e => setCountInStock(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n} //import { useSelector, useDispatch } from \"react-redux\";\n//import { useState, useEffect } from \"react\";\n//import { adminUpdateProduct } from \"features/productsSlice\";\n//import {Container, Form} from 'react-bootstrap';\n////import { Helmet } from 'react-helmet-async';\n//import Loading from '../components/Loading';\n//import ErrorMessageBox from '../components/ErrorMessageBox';\n//import Button from 'react-bootstrap/Button';\n//const AdminProductEdit = () => {\n////  const userInfo = useSelector((state) => state.auth.user);\n//  const { error, status } = useSelector(\n//    (state) => state.products\n//  );\n//  const [name, setName] = useState(\"\");\n//  const [slug, setSlug] = useState(\"\");\n//  const [price, setPrice] = useState(\"\");\n//  const [image, setImage] = useState(\"\");\n//  const [category, setCategory] = useState(\"\");\n//  const [countInStock, setCountInStock] = useState(\"\");\n//  const [brand, setBrand] = useState(\"\");\n//  const [description, setDescription] = useState(\"\");\n//  const dispatch = useDispatch();\n//  useEffect((e) => {\n//\tconst updatedProductData = {\n//\t\tname,\n//\t\tslug,\n//\t\tprice,\n//\t\timage,\n//\t\tcategory,\n//\t\tcountInStock,\n//\t\tbrand,\n//\t\tdescription\n//\t  };\n//\tdispatch(adminUpdateProduct(updatedProductData));\n//  }, [brand, category, countInStock, description, dispatch, image, name, price, slug])\n//  return (\n//\t<Container className=\"small-container\">\n//\t{/*<Helmet>\n//\t  <title>Edit Product ${singleProduct.id}</title>\n//\t</Helmet>*/}\n//\t{/*<h1>Edit Product {singleProduct.id}</h1>*/}\n//\t{status==='pending' ? (\n//\t  <Loading></Loading>\n//\t) : error ? (\n//\t  <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\n//\t) : (\n//\t  <Form>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\n//\t\t  <Form.Label>Name</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={name}\n//\t\t\tonChange={(e) => setName(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"slug\">\n//\t\t  <Form.Label>Slug</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={slug}\n//\t\t\tonChange={(e) => setSlug(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\n//\t\t  <Form.Label>Price</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={price}\n//\t\t\tonChange={(e) => setPrice(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"image\">\n//\t\t  <Form.Label>Image File</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={image}\n//\t\t\tonChange={(e) => setImage(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"category\">\n//\t\t  <Form.Label>Category</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={category}\n//\t\t\tonChange={(e) => setCategory(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"brand\">\n//\t\t  <Form.Label>Brand</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={brand}\n//\t\t\tonChange={(e) => setBrand(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"countInStock\">\n//\t\t  <Form.Label>Count In Stock</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={countInStock}\n//\t\t\tonChange={(e) => setCountInStock(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<Form.Group className=\"mb-3\" controlId=\"description\">\n//\t\t  <Form.Label>Description</Form.Label>\n//\t\t  <Form.Control\n//\t\t\tvalue={description}\n//\t\t\tonChange={(e) => setDescription(e.target.value)}\n//\t\t\trequired\n//\t\t  />\n//\t\t</Form.Group>\n//\t\t<div className=\"mb-3\">\n//\t\t  <Button type=\"submit\">Update</Button>\n//\t\t</div>\n//\t  </Form>\n//\t)}\n//  </Container>\n//  )\n//};\n//export default AdminProductEdit;\n\n_s(ProductEditScreen, \"4L2V8fyXd1BkkycXP6l888a56S0=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","useParams","axios","getError","Container","Form","Helmet","Loading","ErrorMessageBox","Button","reducer","state","action","type","loading","error","payload","ProductEditScreen","params","id","productId","dispatch","name","setName","slug","setSlug","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","fetchData","data","get","err","e","target","value"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/pages/AdminProductEdit.js"],"sourcesContent":["import React, {  useEffect, useReducer, useState } from 'react';\r\nimport {  useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getError } from '../utils';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Loading from '../components/Loading';\r\nimport ErrorMessageBox from '../components/ErrorMessageBox';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function ProductEditScreen() {\r\n  const params = useParams(); // /product/:id\r\n  const { id: productId } = params;\r\n\r\n  \r\n  const [{ loading, error }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  const [name, setName] = useState('');\r\n  const [slug, setSlug] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/products/${productId}`);\r\n        setName(data.name);\r\n        setSlug(data.slug);\r\n        setPrice(data.price);\r\n        setImage(data.image);\r\n        setCategory(data.category);\r\n        setCountInStock(data.countInStock);\r\n        setBrand(data.brand);\r\n        setDescription(data.description);\r\n        dispatch({ type: 'FETCH_SUCCESS' });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [productId]);\r\n\r\n  return (\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Edit Product ${productId}</title>\r\n      </Helmet>\r\n      <h1>Edit Product {productId}</h1>\r\n\r\n      {loading ? (\r\n        <Loading></Loading>\r\n      ) : error ? (\r\n        <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n      ) : (\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"slug\">\r\n            <Form.Label>Slug</Form.Label>\r\n            <Form.Control\r\n              value={slug}\r\n              onChange={(e) => setSlug(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"image\">\r\n            <Form.Label>Image File</Form.Label>\r\n            <Form.Control\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"category\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Control\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"brand\">\r\n            <Form.Label>Brand</Form.Label>\r\n            <Form.Control\r\n              value={brand}\r\n              onChange={(e) => setBrand(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"countInStock\">\r\n            <Form.Label>Count In Stock</Form.Label>\r\n            <Form.Control\r\n              value={countInStock}\r\n              onChange={(e) => setCountInStock(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <div className=\"mb-3\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\n//import { useState, useEffect } from \"react\";\r\n//import { adminUpdateProduct } from \"features/productsSlice\";\r\n//import {Container, Form} from 'react-bootstrap';\r\n////import { Helmet } from 'react-helmet-async';\r\n//import Loading from '../components/Loading';\r\n//import ErrorMessageBox from '../components/ErrorMessageBox';\r\n//import Button from 'react-bootstrap/Button';\r\n\r\n//const AdminProductEdit = () => {\r\n////  const userInfo = useSelector((state) => state.auth.user);\r\n//  const { error, status } = useSelector(\r\n//    (state) => state.products\r\n//  );\r\n//  const [name, setName] = useState(\"\");\r\n//  const [slug, setSlug] = useState(\"\");\r\n//  const [price, setPrice] = useState(\"\");\r\n//  const [image, setImage] = useState(\"\");\r\n//  const [category, setCategory] = useState(\"\");\r\n//  const [countInStock, setCountInStock] = useState(\"\");\r\n//  const [brand, setBrand] = useState(\"\");\r\n//  const [description, setDescription] = useState(\"\");\r\n//  const dispatch = useDispatch();\r\n\r\n\r\n//  useEffect((e) => {\r\n//\tconst updatedProductData = {\r\n//\t\tname,\r\n//\t\tslug,\r\n//\t\tprice,\r\n//\t\timage,\r\n//\t\tcategory,\r\n//\t\tcountInStock,\r\n//\t\tbrand,\r\n//\t\tdescription\r\n\r\n//\t  };\r\n\t  \r\n//\tdispatch(adminUpdateProduct(updatedProductData));\r\n//  }, [brand, category, countInStock, description, dispatch, image, name, price, slug])\r\n//  return (\r\n//\t<Container className=\"small-container\">\r\n//\t{/*<Helmet>\r\n//\t  <title>Edit Product ${singleProduct.id}</title>\r\n//\t</Helmet>*/}\r\n//\t{/*<h1>Edit Product {singleProduct.id}</h1>*/}\r\n\r\n//\t{status==='pending' ? (\r\n//\t  <Loading></Loading>\r\n//\t) : error ? (\r\n//\t  <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n//\t) : (\r\n//\t  <Form>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\r\n//\t\t  <Form.Label>Name</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={name}\r\n//\t\t\tonChange={(e) => setName(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"slug\">\r\n//\t\t  <Form.Label>Slug</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={slug}\r\n//\t\t\tonChange={(e) => setSlug(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\r\n//\t\t  <Form.Label>Price</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={price}\r\n//\t\t\tonChange={(e) => setPrice(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"image\">\r\n//\t\t  <Form.Label>Image File</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={image}\r\n//\t\t\tonChange={(e) => setImage(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"category\">\r\n//\t\t  <Form.Label>Category</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={category}\r\n//\t\t\tonChange={(e) => setCategory(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"brand\">\r\n//\t\t  <Form.Label>Brand</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={brand}\r\n//\t\t\tonChange={(e) => setBrand(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"countInStock\">\r\n//\t\t  <Form.Label>Count In Stock</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={countInStock}\r\n//\t\t\tonChange={(e) => setCountInStock(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<Form.Group className=\"mb-3\" controlId=\"description\">\r\n//\t\t  <Form.Label>Description</Form.Label>\r\n//\t\t  <Form.Control\r\n//\t\t\tvalue={description}\r\n//\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n//\t\t\trequired\r\n//\t\t  />\r\n//\t\t</Form.Group>\r\n//\t\t<div className=\"mb-3\">\r\n//\t\t  <Button type=\"submit\">Update</Button>\r\n//\t\t</div>\r\n//\t  </Form>\r\n//\t)}\r\n//  </Container>\r\n//  )\r\n//};\r\n\r\n//export default AdminProductEdit;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAAUC,SAAV,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYG,OAAO,EAAE;MAArB,CAAP;;IACF,KAAK,eAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYG,OAAO,EAAE;MAArB,CAAP;;IACF,KAAK,YAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYG,OAAO,EAAE,KAArB;QAA4BC,KAAK,EAAEH,MAAM,CAACI;MAA1C,CAAP;;IACF;MACE,OAAOL,KAAP;EARJ;AAUD,CAXD;;AAYA,eAAe,SAASM,iBAAT,GAA6B;EAAA;;EAC1C,MAAMC,MAAM,GAAGjB,SAAS,EAAxB,CAD0C,CACd;;EAC5B,MAAM;IAAEkB,EAAE,EAAEC;EAAN,IAAoBF,MAA1B;EAGA,MAAM,CAAC;IAAEJ,OAAF;IAAWC;EAAX,CAAD,EAAqBM,QAArB,IAAiCtB,UAAU,CAACW,OAAD,EAAU;IACzDI,OAAO,EAAE,IADgD;IAEzDC,KAAK,EAAE;EAFkD,CAAV,CAAjD;EAKA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAAC,EAAD,CAA9C;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMwC,SAAS,GAAG,YAAY;MAC5B,IAAI;QACFjB,QAAQ,CAAC;UAAER,IAAI,EAAE;QAAR,CAAD,CAAR;QACA,MAAM;UAAE0B;QAAF,IAAW,MAAMrC,KAAK,CAACsC,GAAN,CAAW,iBAAgBpB,SAAU,EAArC,CAAvB;QACAG,OAAO,CAACgB,IAAI,CAACjB,IAAN,CAAP;QACAG,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP;QACAG,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR;QACAG,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;QACAG,WAAW,CAACQ,IAAI,CAACT,QAAN,CAAX;QACAG,eAAe,CAACM,IAAI,CAACP,YAAN,CAAf;QACAG,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;QACAG,cAAc,CAACE,IAAI,CAACH,WAAN,CAAd;QACAf,QAAQ,CAAC;UAAER,IAAI,EAAE;QAAR,CAAD,CAAR;MACD,CAZD,CAYE,OAAO4B,GAAP,EAAY;QACZpB,QAAQ,CAAC;UACPR,IAAI,EAAE,YADC;UAEPG,OAAO,EAAEb,QAAQ,CAACsC,GAAD;QAFV,CAAD,CAAR;MAID;IACF,CAnBD;;IAoBAH,SAAS;EACV,CAtBQ,EAsBN,CAAClB,SAAD,CAtBM,CAAT;EAwBA,oBACE,QAAC,SAAD;IAAW,SAAS,EAAC,iBAArB;IAAA,wBACE,QAAC,MAAD;MAAA,uBACE;QAAA,6BAAsBA,SAAtB;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,4BAAkBA,SAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAMGN,OAAO,gBACN,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADM,GAEJC,KAAK,gBACP,QAAC,eAAD;MAAiB,OAAO,EAAC,QAAzB;MAAA,UAAmCA;IAAnC;MAAA;MAAA;MAAA;IAAA,QADO,gBAGP,QAAC,IAAD;MAAA,wBACE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,MAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEO,IADT;UAEE,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eASE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,MAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEpB,IADT;UAEE,QAAQ,EAAGkB,CAAD,IAAOjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAiBE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,MAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAElB,KADT;UAEE,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF,eAyBE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,OAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEhB,KADT;UAEE,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBF,eAiCE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,UAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEd,QADT;UAEE,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAjCF,eAyCE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,OAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEV,KADT;UAEE,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzCF,eAiDE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,cAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAEZ,YADT;UAEE,QAAQ,EAAGU,CAAD,IAAOT,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAjDF,eAyDE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,aAAvC;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UACE,KAAK,EAAER,WADT;UAEE,QAAQ,EAAGM,CAAD,IAAOL,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAFjC;UAGE,QAAQ;QAHV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzDF,eAiEE;QAAK,SAAS,EAAC,MAAf;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAjEF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoFD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GA/PwB3B,iB;UACPhB,S;;;KADOgB,iB"},"metadata":{},"sourceType":"module"}