{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"utils\";\nimport productService from \"./Services/productService\";\nconst initialState = {\n  products: [],\n  error: null,\n  status: \"\",\n  singleProduct: [],\n  updatedProductData: [],\n  updateData: []\n}; //get all products\n\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async () => {\n  try {\n    return await productService.productsFetch();\n  } catch (error) {\n    toast.error(getError(error));\n  }\n}); // get one product\n\nexport const productFetch = createAsyncThunk(\"product/productFetch\", async id => {\n  try {\n    return await productService.productFetch(id);\n  } catch (error) {\n    toast.error(getError(error));\n  }\n}); //remove product\n\nexport const adminRemoveProduct = createAsyncThunk(\"product/deleteProduct\", async product => {\n  try {\n    return await productService.adminRemoveProduct(product);\n  } catch (error) {\n    toast.error(getError(error));\n  }\n}); //admin create product\n\nexport const adminCreateProduct = createAsyncThunk(\"product/createProduct\", async _ref => {\n  let {\n    navigate\n  } = _ref;\n\n  if (window.confirm(\"Are you sure to create?\")) {\n    try {\n      return await productService.adminCreateProduct({\n        navigate\n      });\n    } catch (error) {\n      toast.error(getError(error));\n    }\n  }\n}); // admin update product\n\nexport const adminUpdateProduct = createAsyncThunk(\"product/adminUpdateProduct\", async id => {\n  try {\n    return await productService.adminUpdateProduct(id);\n  } catch (error) {\n    toast.error(getError(error));\n  }\n});\nexport const updateProduct = createAsyncThunk(\"product/updateProduct\", async _ref2 => {\n  let {\n    navigate,\n    updateData\n  } = _ref2;\n\n  try {\n    return await productService.updateProduct({\n      navigate,\n      updateData\n    });\n  } catch (error) {\n    toast.error(getError(error));\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(productsFetch.pending, state => {\n      state.status = \"pending\";\n    }).addCase(productsFetch.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.products = action.payload;\n    }).addCase(productsFetch.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = \"Data not loaded!!!\";\n    }).addCase(adminCreateProduct.pending, state => {\n      state.status = \"pending\";\n    }).addCase(adminCreateProduct.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.singleProduct = action.payload;\n    }).addCase(adminCreateProduct.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = \"Data not loaded!!!\";\n    }).addCase(productFetch.pending, state => {\n      state.status = \"pending\";\n    }).addCase(productFetch.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.singleProduct = action.payload;\n    }).addCase(productFetch.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload.message;\n    }).addCase(adminUpdateProduct.pending, state => {\n      state.status = \"pending\";\n    }).addCase(adminUpdateProduct.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.updatedProductData = action.payload;\n    }).addCase(adminUpdateProduct.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = \"Data not loaded!!!\";\n    }).addCase(updateProduct.pending, state => {\n      state.status = \"pending\";\n    }).addCase(updateProduct.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.updatedProductData = action.payload;\n    }).addCase(updateProduct.rejected, (state, action) => {\n      state.status = \"rejected\";\n    }).addCase(adminRemoveProduct.pending, state => {\n      state.status = \"pending\";\n    }).addCase(adminRemoveProduct.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.products = state.products.filter(item => item._id !== action.payload.data);\n    }).addCase(adminRemoveProduct.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload.message;\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","getError","productService","initialState","products","error","status","singleProduct","updatedProductData","updateData","productsFetch","productFetch","id","adminRemoveProduct","product","adminCreateProduct","navigate","window","confirm","adminUpdateProduct","updateProduct","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","filter","item","_id","data","reducer"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/features/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"utils\";\r\nimport productService from \"./Services/productService\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  error: null,\r\n  status: \"\",\r\n  singleProduct: [],\r\n  updatedProductData: [],\r\n  updateData: [],\r\n};\r\n\r\n//get all products\r\nexport const productsFetch = createAsyncThunk(\r\n  \"products/productsFetch\",\r\n  async () => {\r\n    try {\r\n      return await productService.productsFetch();\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n    }\r\n  }\r\n);\r\n\r\n// get one product\r\nexport const productFetch = createAsyncThunk(\r\n  \"product/productFetch\",\r\n  async (id) => {\r\n    try {\r\n      return await productService.productFetch(id);\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n    }\r\n  }\r\n);\r\n\r\n//remove product\r\nexport const adminRemoveProduct = createAsyncThunk(\r\n  \"product/deleteProduct\",\r\n  async (product) => {\r\n    try {\r\n      return await productService.adminRemoveProduct(product);\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n    }\r\n  }\r\n);\r\n\r\n//admin create product\r\nexport const adminCreateProduct = createAsyncThunk(\r\n  \"product/createProduct\",\r\n  async ({ navigate }) => {\r\n    if (window.confirm(\"Are you sure to create?\")) {\r\n      try {\r\n        return await productService.adminCreateProduct({ navigate });\r\n      } catch (error) {\r\n        toast.error(getError(error));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// admin update product\r\nexport const adminUpdateProduct = createAsyncThunk(\r\n  \"product/adminUpdateProduct\",\r\n  async (id) => {\r\n    try {\r\n      return await productService.adminUpdateProduct(id);\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n  \"product/updateProduct\",\r\n  async ({ navigate, updateData }) => {\r\n    try {\r\n      return await productService.updateProduct({ navigate, updateData });\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n    }\r\n  }\r\n);\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(productsFetch.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(productsFetch.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(productsFetch.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n        state.error = \"Data not loaded!!!\";\r\n      })\r\n      .addCase(adminCreateProduct.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(adminCreateProduct.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.singleProduct = action.payload;\r\n      })\r\n      .addCase(adminCreateProduct.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n        state.error = \"Data not loaded!!!\";\r\n      })\r\n      .addCase(productFetch.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(productFetch.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.singleProduct = action.payload;\r\n      })\r\n      .addCase(productFetch.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n        state.error = action.payload.message;\r\n      })\r\n      .addCase(adminUpdateProduct.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(adminUpdateProduct.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.updatedProductData = action.payload;\r\n      })\r\n      .addCase(adminUpdateProduct.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n        state.error = \"Data not loaded!!!\";\r\n      })\r\n      .addCase(updateProduct.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(updateProduct.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.updatedProductData = action.payload;\r\n      })\r\n      .addCase(updateProduct.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n      })\r\n      .addCase(adminRemoveProduct.pending, (state) => {\r\n        state.status = \"pending\";\r\n      })\r\n      .addCase(adminRemoveProduct.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n\r\n        state.products = state.products.filter(\r\n          (item) => item._id !== action.payload.data\r\n        );\r\n      })\r\n      .addCase(adminRemoveProduct.rejected, (state, action) => {\r\n        state.status = \"rejected\";\r\n        state.error = action.payload.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}