{"ast":null,"code":"var _jsxFileName = \"C:\\\\tiedostot\\\\integrify\\\\fs12-fullstack\\\\client\\\\src\\\\pages\\\\AdminUserEdit.js\",\n    _s = $RefreshSig$();\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport ErrorMessageBox from \"../components/ErrorMessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { adminUpdateUser, updateUser } from \"features/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUserEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams(); // /user/:id\n\n  const {\n    id: userId\n  } = params;\n  const {\n    updatedUserData,\n    isError,\n    isLoading\n  } = useSelector(state => state.auth);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isBanned, setIsBanned] = useState(false);\n  useEffect(() => {\n    setName(updatedUserData.name);\n    setEmail(updatedUserData.email);\n    setIsAdmin(updatedUserData.isAdmin);\n    setIsBanned(updatedUserData.isBanned);\n    dispatch(adminUpdateUser(userId));\n  }, [userId, dispatch, updatedUserData.name, updatedUserData.email, updatedUserData.isAdmin, updatedUserData.isBanned]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const updateData = {\n      _id: userId,\n      name,\n      email,\n      isAdmin,\n      isBanned\n    };\n    dispatch(updateUser({\n      navigate,\n      updateData\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit User $\", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit User \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(ErrorMessageBox, {\n      variant: \"danger\",\n      children: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: email,\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        className: \"mb-3\",\n        type: \"checkbox\",\n        id: \"isAdmin\",\n        label: \"isAdmin\",\n        checked: isAdmin,\n        onChange: e => setIsAdmin(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        className: \"mb-3\",\n        type: \"checkbox\",\n        id: \"isBanned\",\n        label: \"isBanned\",\n        checked: isBanned,\n        onChange: e => setIsBanned(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminUserEdit, \"ueyr3nIf+CZTzPiwyRT6HIVq308=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n\n_c = AdminUserEdit;\nexport default AdminUserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUserEdit\");","map":{"version":3,"names":["Container","Form","Button","Helmet","useParams","useNavigate","Loading","ErrorMessageBox","useDispatch","useSelector","useEffect","useState","adminUpdateUser","updateUser","AdminUserEdit","dispatch","navigate","params","id","userId","updatedUserData","isError","isLoading","state","auth","name","setName","email","setEmail","isAdmin","setIsAdmin","isBanned","setIsBanned","submitHandler","e","preventDefault","updateData","_id","target","value","checked"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/pages/AdminUserEdit.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport ErrorMessageBox from \"../components/ErrorMessageBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { adminUpdateUser, updateUser } from \"features/authSlice\";\r\n\r\nconst AdminUserEdit = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const params = useParams(); // /user/:id\r\n  const { id: userId } = params;\r\n  const { updatedUserData, isError, isLoading } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isBanned, setIsBanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setName(updatedUserData.name);\r\n    setEmail(updatedUserData.email);\r\n    setIsAdmin(updatedUserData.isAdmin);\r\n    setIsBanned(updatedUserData.isBanned);\r\n    dispatch(adminUpdateUser(userId));\r\n  }, [\r\n    userId,\r\n    dispatch,\r\n    updatedUserData.name,\r\n    updatedUserData.email,\r\n    updatedUserData.isAdmin,\r\n    updatedUserData.isBanned,\r\n  ]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const updateData = {\r\n      _id: userId,\r\n      name,\r\n      email,\r\n      isAdmin,\r\n      isBanned,\r\n    };\r\n    dispatch(updateUser({ navigate, updateData }));\r\n  };\r\n  return (\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Edit User ${userId}</title>\r\n      </Helmet>\r\n      <h1>Edit User {userId}</h1>\r\n\r\n      {isLoading ? (\r\n        <Loading></Loading>\r\n      ) : isError ? (\r\n        <ErrorMessageBox variant=\"danger\">{isError}</ErrorMessageBox>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              value={email}\r\n              type=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Check\r\n            className=\"mb-3\"\r\n            type=\"checkbox\"\r\n            id=\"isAdmin\"\r\n            label=\"isAdmin\"\r\n            checked={isAdmin}\r\n            onChange={(e) => setIsAdmin(e.target.checked)}\r\n          />\r\n          <Form.Check\r\n            className=\"mb-3\"\r\n            type=\"checkbox\"\r\n            id=\"isBanned\"\r\n            label=\"isBanned\"\r\n            checked={isBanned}\r\n            onChange={(e) => setIsBanned(e.target.checked)}\r\n          />\r\n\r\n          <div className=\"mb-3\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminUserEdit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}