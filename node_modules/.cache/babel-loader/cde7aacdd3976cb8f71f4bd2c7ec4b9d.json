{"ast":null,"code":"var _jsxFileName = \"C:\\\\tiedostot\\\\integrify\\\\fs12-fullstack\\\\client\\\\src\\\\pages\\\\AdminDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDashboardSummary } from \"features/cartSlice\";\nimport Loading from \"components/Loading\";\nimport ErrorMessageBox from \"components/ErrorMessageBox\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Chart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = () => {\n  _s();\n\n  const {\n    summary,\n    error\n  } = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  console.log(summary);\n  useEffect(() => {\n    dispatch(getDashboardSummary());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 2\n  }, this) //\t<div>\n  //\t<h1>Dashboard</h1>\n  //\t{summary.status === 'pending' ? (\n  //\t  <Loading />\n  //\t) : error ? (\n  //\t  <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\n  //\t) : (\n  //\t  <>\n  //\t\t<Row>\n  //\t\t  <Col md={4}>\n  //\t\t\t<Card>\n  //\t\t\t  <Card.Body>\n  //\t\t\t\t<Card.Title>\n  //\t\t\t\t  {summary.users && summary.users[0]\n  //\t\t\t\t\t? summary.users[0].numUsers\n  //\t\t\t\t\t: 0}\n  //\t\t\t\t</Card.Title>\n  //\t\t\t\t<Card.Text> Users</Card.Text>\n  //\t\t\t  </Card.Body>\n  //\t\t\t</Card>\n  //\t\t  </Col>\n  //\t\t  <Col md={4}>\n  //\t\t\t<Card>\n  //\t\t\t  <Card.Body>\n  //\t\t\t\t<Card.Title>\n  //\t\t\t\t  {summary.orders && summary.users[0]\n  //\t\t\t\t\t? summary.orders[0].numOrders\n  //\t\t\t\t\t: 0}\n  //\t\t\t\t</Card.Title>\n  //\t\t\t\t<Card.Text> Orders</Card.Text>\n  //\t\t\t  </Card.Body>\n  //\t\t\t</Card>\n  //\t\t  </Col>\n  //\t\t  <Col md={4}>\n  //\t\t\t<Card>\n  //\t\t\t  <Card.Body>\n  //\t\t\t\t<Card.Title>\n  //\t\t\t\t  €\n  //\t\t\t\t  {summary.orders && summary.users[0]\n  //\t\t\t\t\t? summary.orders[0].totalSales.toFixed(2)\n  //\t\t\t\t\t: 0}\n  //\t\t\t\t</Card.Title>\n  //\t\t\t\t<Card.Text> Orders</Card.Text>\n  //\t\t\t  </Card.Body>\n  //\t\t\t</Card>\n  //\t\t  </Col>\n  //\t\t</Row>\n  //\t\t<div className=\"my-3\">\n  //\t\t  <h2>Sales</h2>\n  //\t\t  {summary.dailyOrders?.length === 0 ? (\n  //\t\t\t<ErrorMessageBox>No Sale</ErrorMessageBox>\n  //\t\t  ) : (\n  //\t\t\t<Chart\n  //\t\t\t  width=\"100%\"\n  //\t\t\t  height=\"400px\" \n  //\t\t\t  chartType=\"AreaChart\"\n  //\t\t\t  loader={<div>Loading Chart...</div>}\n  //\t\t\t  data={[\n  //\t\t\t\t['Date', 'Sales'],\n  //\t\t\t\t...summary.dailyOrders.map((x) => [x._id, x.sales]),\n  //\t\t\t  ]}\n  //\t\t\t></Chart>\n  //\t\t  )}\n  //\t\t</div>\n  //\t\t<div className=\"my-3\">\n  //\t\t  <h2>Categories</h2>\n  //\t\t  {summary.productCategories?.length === 0 ? (\n  //\t\t\t<ErrorMessageBox>No Category</ErrorMessageBox>\n  //\t\t  ) : (\n  //\t\t\t<Chart\n  //\t\t\t  width=\"100%\"\n  //\t\t\t  height=\"400px\"\n  //\t\t\t  chartType=\"PieChart\"\n  //\t\t\t  loader={<div>Loading Chart...</div>}\n  //\t\t\t  data={[\n  //\t\t\t\t['Category', 'Products'],\n  //\t\t\t\t...summary.productCategories.map((x) => [x._id, x.count]),\n  //\t\t\t  ]}\n  //\t\t\t></Chart>\n  //\t\t  )}\n  //\t\t</div>\n  //\t  </>\n  //\t)}\n  //  </div>\n  ;\n};\n\n_s(AdminDashboard, \"FSYPmM/JRhnmP9pkg6XEdnphk0c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","getDashboardSummary","Loading","ErrorMessageBox","Row","Col","Card","Chart","AdminDashboard","summary","error","state","cart","dispatch","console","log"],"sources":["C:/tiedostot/integrify/fs12-fullstack/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDashboardSummary } from \"features/cartSlice\";\r\n\r\nimport Loading from \"components/Loading\";\r\nimport ErrorMessageBox from \"components/ErrorMessageBox\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport Chart from 'react-google-charts';\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  const { summary, error } = useSelector((state) => state.cart);\r\n\r\n  const dispatch = useDispatch();\r\n\tconsole.log(summary)\r\n  useEffect(() => {\r\n    dispatch(getDashboardSummary());\r\n  }, [dispatch]);\r\n  return (\r\n\t<div>\r\n\r\n\t</div>\r\n//\t<div>\r\n//\t<h1>Dashboard</h1>\r\n//\t{summary.status === 'pending' ? (\r\n//\t  <Loading />\r\n//\t) : error ? (\r\n//\t  <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n//\t) : (\r\n//\t  <>\r\n//\t\t<Row>\r\n//\t\t  <Col md={4}>\r\n//\t\t\t<Card>\r\n//\t\t\t  <Card.Body>\r\n//\t\t\t\t<Card.Title>\r\n//\t\t\t\t  {summary.users && summary.users[0]\r\n//\t\t\t\t\t? summary.users[0].numUsers\r\n//\t\t\t\t\t: 0}\r\n//\t\t\t\t</Card.Title>\r\n//\t\t\t\t<Card.Text> Users</Card.Text>\r\n//\t\t\t  </Card.Body>\r\n//\t\t\t</Card>\r\n//\t\t  </Col>\r\n//\t\t  <Col md={4}>\r\n//\t\t\t<Card>\r\n//\t\t\t  <Card.Body>\r\n//\t\t\t\t<Card.Title>\r\n//\t\t\t\t  {summary.orders && summary.users[0]\r\n//\t\t\t\t\t? summary.orders[0].numOrders\r\n//\t\t\t\t\t: 0}\r\n//\t\t\t\t</Card.Title>\r\n//\t\t\t\t<Card.Text> Orders</Card.Text>\r\n//\t\t\t  </Card.Body>\r\n//\t\t\t</Card>\r\n//\t\t  </Col>\r\n//\t\t  <Col md={4}>\r\n//\t\t\t<Card>\r\n//\t\t\t  <Card.Body>\r\n//\t\t\t\t<Card.Title>\r\n//\t\t\t\t  €\r\n//\t\t\t\t  {summary.orders && summary.users[0]\r\n//\t\t\t\t\t? summary.orders[0].totalSales.toFixed(2)\r\n//\t\t\t\t\t: 0}\r\n//\t\t\t\t</Card.Title>\r\n//\t\t\t\t<Card.Text> Orders</Card.Text>\r\n//\t\t\t  </Card.Body>\r\n//\t\t\t</Card>\r\n//\t\t  </Col>\r\n//\t\t</Row>\r\n//\t\t<div className=\"my-3\">\r\n//\t\t  <h2>Sales</h2>\r\n//\t\t  {summary.dailyOrders?.length === 0 ? (\r\n//\t\t\t<ErrorMessageBox>No Sale</ErrorMessageBox>\r\n//\t\t  ) : (\r\n//\t\t\t<Chart\r\n//\t\t\t  width=\"100%\"\r\n//\t\t\t  height=\"400px\" \r\n//\t\t\t  chartType=\"AreaChart\"\r\n//\t\t\t  loader={<div>Loading Chart...</div>}\r\n//\t\t\t  data={[\r\n//\t\t\t\t['Date', 'Sales'],\r\n//\t\t\t\t...summary.dailyOrders.map((x) => [x._id, x.sales]),\r\n//\t\t\t  ]}\r\n//\t\t\t></Chart>\r\n//\t\t  )}\r\n//\t\t</div>\r\n//\t\t<div className=\"my-3\">\r\n//\t\t  <h2>Categories</h2>\r\n//\t\t  {summary.productCategories?.length === 0 ? (\r\n//\t\t\t<ErrorMessageBox>No Category</ErrorMessageBox>\r\n//\t\t  ) : (\r\n//\t\t\t<Chart\r\n//\t\t\t  width=\"100%\"\r\n//\t\t\t  height=\"400px\"\r\n//\t\t\t  chartType=\"PieChart\"\r\n//\t\t\t  loader={<div>Loading Chart...</div>}\r\n//\t\t\t  data={[\r\n//\t\t\t\t['Category', 'Products'],\r\n//\t\t\t\t...summary.productCategories.map((x) => [x._id, x.count]),\r\n//\t\t\t  ]}\r\n//\t\t\t></Chart>\r\n//\t\t  )}\r\n//\t\t</div>\r\n//\t  </>\r\n//\t)}\r\n//  </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,oBAApC;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAqBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAtC;EAEA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACDc,OAAO,CAACC,GAAR,CAAYN,OAAZ;EACCX,SAAS,CAAC,MAAM;IACde,QAAQ,CAACZ,mBAAmB,EAApB,CAAR;EACD,CAFQ,EAEN,CAACY,QAAD,CAFM,CAAT;EAGA,oBACD;IAAA;IAAA;IAAA;EAAA,QADC,CAIF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAvFE;AA0FD,CAlGD;;GAAML,c;UACuBT,W,EAEVC,W;;;KAHbQ,c;AAoGN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}